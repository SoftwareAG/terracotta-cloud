apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ template "terracotta.fullname" . }}
  labels:
    app: {{ template "terracotta.name" . }}
    chart: {{ template "terracotta.chart" . }}
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ template "terracotta.name" . }}
      release: "{{ .Release.Name }}"
  serviceName: {{ template "terracotta.fullname" . }}
  template:
    metadata:
      labels:
        app: {{ template "terracotta.name" . }}
        release: "{{ .Release.Name }}"
    spec:
      {{- if .Values.affinity }}
      affinity:
{{ toYaml .Values.affinity | indent 8 }}
      {{- end }}
      {{- if .Values.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.nodeSelector | indent 8 }}
      {{- end }}
      initContainers:
      # terracotta-server will not start if its own hostname is not yet in DNS
      - name: wait-for-dns
        image: busybox:1.28
        command: ['sh', '-c', "echo Waiting for our DNS entry ; until nslookup $(POD_NAME).{{ template "terracotta.fullname" . }}; do echo waiting for DNS; sleep 2; done"]
        env:
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name

      containers:
      - name: server
        image: "{{ .Values.registry }}/{{ .Values.serverImage.name }}:{{ .Values.tag }}"
        imagePullPolicy: {{ .Values.pullPolicy | quote }}

        command: ["bin/start-tc-server.sh"]
        args: [{{ if .Values.autoActivate }}"--auto-activate", {{end}} "-f", "/configs/tc-config.properties", "-n", "$(POD_NAME)"]
        resources:
{{ toYaml .Values.resources | indent 10 }}
        ports:
          - name: terracotta-port
            containerPort: 9410
          - name: sync-port
            containerPort: 9430
        volumeMounts:
          - name: config-volume
            mountPath: /configs
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: ACCEPT_EULA
          value: "Y"
      - name: readiness
        image: "{{ .Values.registry }}/{{ .Values.clusterToolImage.name }}:{{ .Values.tag }}"
        imagePullPolicy: {{ .Values.pullPolicy | quote }}
        command: ["sh", "-c", "while true; do sleep 86400; done"]
        readinessProbe:
          exec:
            command: ["bash", "-c", "bin/cluster-tool.sh status -connect-to ${POD_NAME}.{{ template "terracotta.fullname" . }}"]
          initialDelaySeconds: 15
          periodSeconds: 15
          timeoutSeconds: 5
          # 10,000 as failure threshold gives around 41 hours of time to load from FRS and start terracotta successfully.
          failureThreshold: 10000
        env:
          - name: ACCEPT_EULA
            value: "Y"
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
      {{- if .Values.imagePullSecrets }}
      imagePullSecrets:
{{ toYaml .Values.imagePullSecrets | indent 8 }}
      {{- end }}


      volumes:
      - name: config-volume
        configMap:
          name: {{ template "terracotta.fullname" . }}-configuration
