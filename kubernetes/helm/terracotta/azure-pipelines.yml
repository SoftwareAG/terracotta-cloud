pool:
  vmImage: 'ubuntu-latest'
variables: 
- group: 'github'

steps:
- task: Docker@0
  displayName: 'Generate helm package'
  inputs:
    containerRegistryType: 'Container Registry'
    action: 'Run an image'
    imageName: 'alpine/helm'
    volumes: |
      $(build.sourcesDirectory)/kubernetes/helm/terracotta:/terracotta
    containerCommand: 'package .'
    workdir: '/terracotta'
    detached: false    
- task: Docker@0
  displayName: 'Download existing index.yaml'
  inputs:
    containerRegistryType: 'Container Registry'
    action: 'Run an image'
    imageName: 'alpine:latest'
    volumes: |
      $(build.sourcesDirectory)/kubernetes/helm/terracotta:/terracotta
    containerCommand: 'wget -P /terracotta/ https://softwareag.github.io/terracotta-cloud/index.yaml'
    detached: false   
- task: Docker@0
  displayName: 'Generate helm index.yaml'
  inputs:
    containerRegistryType: 'Container Registry'
    action: 'Run an image'
    imageName: 'alpine/helm'
    volumes: |
      $(build.sourcesDirectory)/kubernetes/helm/terracotta:/terracotta
    containerCommand: 'repo index --merge index.yaml .'
    workdir: '/terracotta'
    detached: false    
- bash: |
    # setup Github Pages branch and repo to push to
    gh_url="https://${GITHUB_AUTH}@github.com/SoftwareAG/terracotta-cloud.git"
    gh_branch=gh-pages
    gh_source="#${SYSTEM_PULLREQUEST_PULLREQUESTNUMBER}"
    
    COMMIT=$(git rev-parse HEAD)
    
    # setup git username and email; auth was done in a previous task 
    git config --local user.name "autogen"
    git config --local user.email "autogen-noreply@no-reply.softwareag.com"

    # only keep files that were generated previously : index.yaml and a .tgz archive
    cp $(build.sourcesDirectory)/kubernetes/helm/terracotta/index.yaml /tmp/
    cp $(build.sourcesDirectory)/kubernetes/helm/terracotta/*.tgz /tmp/
    
    git checkout -f gh-pages
    git pull $gh_url $gh_branch
    cp /tmp/index.yaml $(build.sourcesDirectory)/
    cp /tmp/*.tgz $(build.sourcesDirectory)/
    git add index.yaml *.tgz
    git status
    git commit -m "Update repository with latest helm chart from ${gh_source} ${COMMIT}" index.yaml *.tgz
    git push $gh_url $gh_branch
  env:
    GITHUB_AUTH: $(gh_user):$(gh_token)
  displayName: 'Commit Helm Charts'
  condition: and(not(eq(variables['Build.Reason'], 'PullRequest')), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
